import telebot
from telebot import types
import sqlite3
import requests
import json


main_menu = telebot.types.ReplyKeyboardMarkup(True)
main_menu.row('–ê—Ç–∞–∫–∞')
main_menu.row('–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è')

admin = telebot.types.ReplyKeyboardMarkup(True)
admin.row('–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞')
admin.row('–†–∞—Å—Å—ã–ª–∫–∞')


menu = types.InlineKeyboardMarkup()
menu.add(types.InlineKeyboardButton(text='–ë–æ–º–±–∏—Ç—å',callback_data=f'–±–æ–º–±–∏–º'))
menu.add(types.InlineKeyboardButton(text='–ê–∫—Ç–∏–≤–Ω—ã–µ',callback_data=f'–∞–∫—Ç–∏–≤–Ω—ã–µ'),types.InlineKeyboardButton(text='–ò—Å—Ç–æ—Ä–∏—è',callback_data=f'–∏—Å—Ç–æ—Ä–∏—è'))
menu.add(types.InlineKeyboardButton(text='PREMIUM –¥–æ—Å—Ç—É–ø',callback_data=f'premium'))


country = types.InlineKeyboardMarkup()
country.add(types.InlineKeyboardButton(text='üá∑üá∫ –†–æ—Å—Å–∏—è',callback_data=f'—Ä–æ—Å—Å–∏—è'))
country.add(types.InlineKeyboardButton(text='üá∫üá¶ –£–∫—Ä–∞–∏–Ω–∞',callback_data=f'—É–∫—Ä–∞–∏–Ω–∞'),types.InlineKeyboardButton(text='üá∞üáø –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω',callback_data=f'–∫–∞–∑–∞—Ö—Å—Ç–∞–Ω'))



def activ_bomber(userid):
	connection = sqlite3.connect('bomber.db')
	q = connection.cursor()
	q = q.execute(f'SELECT * FROM ugc_spam where userid = "{userid}" and status = "1"')
	row = q.fetchall()
	services = types.InlineKeyboardMarkup(row_width=2)
	btns = []
	for i in range(len(row)):
		try:
			btns.append(types.InlineKeyboardButton(text=f'{row[i][2]}',callback_data=f'–∞–∏–Ω—Ñ–∞_{row[i][0]}'))		
		except:
			continue
	while btns != []:
		try:
			services.add(
				btns[0],
				btns[1],
				)
			del btns[1], btns[0]
		except:
			services.add(btns[0])
			del btns[0]
	services.add(types.InlineKeyboardButton(text='–ù–∞–∑–∞–¥',callback_data=f'–≤–µ—Ä–Ω—É—Ç—å—Å—è_–≥–ª–∞–≤–Ω–∞—è'))
	return services


def all_bomber(userid):
	connection = sqlite3.connect('bomber.db')
	q = connection.cursor()
	q = q.execute(f'SELECT * FROM ugc_spam where userid = "{userid}"')
	row = q.fetchall()
	services = types.InlineKeyboardMarkup(row_width=3)
	btns = []
	for i in range(len(row)):
		try:
			btns.append(types.InlineKeyboardButton(text=f'{row[i][2]}',callback_data=f'–≤–∏–Ω—Ñ–∞_{row[i][0]}'))		
		except:
			continue
	while btns != []:
		try:
			services.add(
				btns[0],
				btns[1],
				btns[2]
				)
			del btns[2],btns[1], btns[0]
		except:
			services.add(btns[0])
			del btns[0]
	services.add(types.InlineKeyboardButton(text='–ù–∞–∑–∞–¥',callback_data=f'–≤–µ—Ä–Ω—É—Ç—å—Å—è_–≥–ª–∞–≤–Ω–∞—è'))
	return services



def premium(userid):
	connection = sqlite3.connect('bomber.db')
	q = connection.cursor()
	infa = q.execute(f'SELECT * FROM ugc_users where userid = "{userid}"').fetchone()
	if str(infa[2]) == '0':
		menu = types.InlineKeyboardMarkup()
		menu.add(types.InlineKeyboardButton(text='–ü–æ–ª—É—á–∏—Ç—å',callback_data=f'–ø–æ–ª—É—á–∏—Ç—å_–ø—Ä–µ–º'))
		menu.add(types.InlineKeyboardButton(text='–ö—É–ø–∏—Ç—å',callback_data=f'–∫—É–ø–∏—Ç—å_–ø—Ä–µ–º'))
		menu.add(types.InlineKeyboardButton(text='–ù–∞–∑–∞–¥',callback_data=f'–≤–µ—Ä–Ω—É—Ç—å—Å—è_–≥–ª–∞–≤–Ω–∞—è'))
	else:
		menu = types.InlineKeyboardMarkup()
		menu.add(types.InlineKeyboardButton(text='White list',callback_data=f'white_list'))
		menu.add(types.InlineKeyboardButton(text='–ù–∞–∑–∞–¥',callback_data=f'–≤–µ—Ä–Ω—É—Ç—å—Å—è_–≥–ª–∞–≤–Ω–∞—è'))
	return menu


def buy_premium(userid):
	connection = sqlite3.connect('bomber.db')
	q = connection.cursor()
	infa = q.execute(f'SELECT * FROM ugc_config').fetchone()
	menu = types.InlineKeyboardMarkup()
	url = f'https://qiwi.com/payment/form/99?extra%5B%27account%27%5D={infa[1]}&amountFraction=0&extra%5B%27comment%27%5D={userid}&currency=643&blocked[0]=account'
	menu.add(types.InlineKeyboardButton(text='–û–ø–ª–∞—Ç–∏—Ç—å',url=url))
	menu.add(types.InlineKeyboardButton(text='–ù–∞–∑–∞–¥',callback_data=f'–≤–µ—Ä–Ω—É—Ç—å—Å—è_–≥–ª–∞–≤–Ω–∞—è'))
	return menu



def white_list(userid):
	connection = sqlite3.connect('bomber.db')
	q = connection.cursor()
	q = q.execute(f'SELECT * FROM ugc_white_list where userid = "{userid}"')
	row = q.fetchall()
	services = types.InlineKeyboardMarkup(row_width=3)
	btns = []
	for i in range(len(row)):
		try:
			btns.append(types.InlineKeyboardButton(text=f'{row[i][2]}',callback_data=f'–ª–∏–Ω—Ñ–∞_{row[i][2]}'))		
		except:
			continue
	while btns != []:
		try:
			services.add(
				btns[0],
				btns[1],
				btns[2]
				)
			del btns[2],btns[1], btns[0]
		except:
			services.add(btns[0])
			del btns[0]
	services.add(types.InlineKeyboardButton(text='–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä',callback_data=f'–¥–æ–±–∞–≤–∏—Ç—å_–Ω–æ–º–µ—Ä'))
	services.add(types.InlineKeyboardButton(text='–ù–∞–∑–∞–¥',callback_data=f'–≤–µ—Ä–Ω—É—Ç—å—Å—è_–≥–ª–∞–≤–Ω–∞—è'))
	return services









